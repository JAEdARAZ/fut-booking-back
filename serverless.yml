service: fut-booking-back
app: fut-booking

frameworkVersion: "3"

plugins:
  - serverless-iam-roles-per-function
  - serverless-export-env

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${self:custom.deployment.globalStages.stage}
  region: ${self:custom.deployment.region.${self:provider.stage}}
  environment:
    futBookingTableName: ${self:custom.futBookingTableName}
    httpApiGatewayEndpointId: !Ref HttpApi
    region: ${self:provider.region}

package:
  individually: true
  patterns:
    - "!**/*"

custom:
  deployment: ${file(config/deployment.yml):deployment}
  futBookingTableName: ${self:provider.stage}-fut-booking
  export-env:
    filename: .awsenv
    overwrite: true

functions:
  getGames:
    handler: src/functions/getGames/index.handler
    events:
      - httpApi:
          method: GET
          path: /games
    package:
      patterns:
        - src/common/**
        - package.json
        - node_modules/**
        - src/functions/getGames/**
    iamRoleStatements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
          Resource:
            - !Sub '${FutBookingTable.Arn}/index/*'
  createGame:
    handler: src/functions/createGame/index.handler
    events:
      - httpApi:
          method: POST
          path: /games
    package:
      patterns:
        - src/common/**
        - package.json
        - node_modules/**
        - src/functions/createGame/**
    iamRoleStatements:
        - Effect: "Allow"
          Action:
            - dynamodb:PutItem
          Resource:
            - !GetAtt FutBookingTable.Arn
  getFields:
    handler: src/functions/getFields/index.handler
    events:
      - httpApi:
          method: GET
          path: /fields
    package:
      patterns:
        - src/common/**
        - package.json
        - node_modules/**
        - src/functions/getFields/**
    iamRoleStatements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
          Resource:
            - !GetAtt FutBookingTable.Arn
  createField:
    handler: src/functions/createField/index.handler
    events:
      - httpApi:
          method: POST
          path: /fields
    package:
      patterns:
        - src/common/**
        - package.json
        - node_modules/**
        - src/functions/createField/**
    iamRoleStatements:
        - Effect: "Allow"
          Action:
            - dynamodb:PutItem
          Resource:
            - !GetAtt FutBookingTable.Arn

resources:
  Resources:
    FutBookingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.futBookingTableName}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: gameWeek
            AttributeType: S
          - AttributeName: gameDateTime
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: gameWeek-gameDateTime-index
            KeySchema:
              - AttributeName: gameWeek
                KeyType: HASH
              - AttributeName: gameDateTime
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: SK-gameDateTime-index
            KeySchema:
              - AttributeName: SK
                KeyType: HASH
              - AttributeName: gameDateTime
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE